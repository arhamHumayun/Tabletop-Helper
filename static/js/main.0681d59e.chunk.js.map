{"version":3,"sources":["components/AppHeader.js","components/About.js","components/Dice/Dice.js","components/Dice/DicePage.js","components/SplashScreen.js","components/StatGenerator/DND5eStats.js","components/StatGenerator/CoCStats.js","components/Curations.js","components/Combat/CyberpunkCombat.js","components/Combat/CyberpunkWrapper.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","react_default","a","createElement","Navbar_default","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav_default","className","Link","NavDropdown_default","title","Item","Divider","inline","Component","About","Dice","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rolls","result","finalResult","multiple","inputValue","roll","bind","assertThisInitialized","changeMod","changeMultiple","reset","total","i","Math","floor","random","diceSize","parseInt","length","setState","e","target","validity","valid","value","Container_default","style","left","position","display","Row_default","Col_default","sm","Button_default","onClick","size","block","padding","type","onChange","step","width","height","fontSize","text-align","DicePage","items","uuid","removeItem","addItem","concat","toConsumableArray","newItems","filter","item","_this2","listItems","map","ListGroup_default","Dice_Dice","console","log","ButtonToolbar_default","ButtonGroup_default","fluid","DND5eStats","statArray","rollsArray","generate4D6DL","generate3D6","generate2D6plus6","showStandardArray","results","j","sort","aria-label","OverlayTrigger_default","key","placement","overlay","Tooltip_default","Table_default","bordered","hover","CoCStats","generateStandard","generate1D100","Curations","CyberpunkCombat","body","Array","numBullets","numDice","damageBonus","textAlign","CyberpunkWrapper","showModal","handleShow","handleClose","Modal_default","show","onHide","Header","closeButton","Title","Body","Form_default","Row","Group","controlId","Footer","CyberpunkCombat_CyberpunkCombat","Main","react_router","exact","path","component","App","AppHeader_AppHeader","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0681d59e.chunk.js","sourcesContent":["import Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport React, { Component } from 'react';\r\n\r\nexport default class AppHeader extends Component {\r\n    render() {\r\n        return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n            <Navbar.Brand href=\"/Tabletop-Helper/\">Tabletop Helper</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/Tabletop-Helper/dice\">Roll Dice</Nav.Link>\r\n              <NavDropdown title=\"Generate Stats\" id=\"collapsible-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/generate/dnd\">DnD 5e</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/generate/coc\">Call of Cthulu 7e</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/generate/pf\">Pathfinder 2e</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"/pointbuy/dnd\">Dnd 5e Point Buy</NavDropdown.Item>\r\n              </NavDropdown>\r\n              <Nav.Link href=\"/curations\">Curations</Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              <Nav.Link href=\"https://github.com/arhamHumayun/Tabletop-Helper\">Github</Nav.Link>\r\n              <Nav.Link href=\"/about\" inline>About</Nav.Link>\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <p><a href=\"https://github.com/arhamHumayun/Tabletop-Helper\">Github</a></p>\r\n                <p>This is passion project made by Arham Humayun.</p>\r\n                <p>The goal for this project is to be the most robust dice rolling application on the web.</p>\r\n                <p>This website will also be the place where websites will be curated, to serve as a hub for anything a player or game master would need.</p>\r\n                <p>This project was made entirely in <a href=\"https://reactjs.org\">React</a> and heavily utilizes <a href=\"https://react-bootstrap.github.io/\">React Bootstrap</a>.</p>\r\n                <p>To contact me, please email me at: arham099@outlook.com</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nexport default class Dice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rolls: [],\r\n            result: 0,\r\n            finalResult: 0,\r\n            multiple: \"1\",\r\n            inputValue: \"0\"\r\n        }\r\n\r\n        this.roll = this.roll.bind(this);\r\n        this.changeMod = this.changeMod.bind(this);\r\n        this.changeMultiple = this.changeMultiple.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n    }\r\n\r\n    roll() {\r\n        let total = 0;\r\n        let rolls = [];\r\n        let finalResult = 0;\r\n\r\n        for(let i = 0; i < this.state.multiple; i++) {\r\n            rolls[i] = Math.floor(Math.random() * this.props.diceSize) + 1\r\n        }\r\n\r\n        for (var i in rolls)\r\n            total += rolls[i];\r\n\r\n        finalResult = parseInt(this.state.inputValue, 10) + total\r\n        \r\n        for (i = 0; i < rolls.length - 1; i++) {\r\n            rolls[i] = rolls[i] + \" + \"\r\n        }\r\n\r\n        this.setState(state => ({\r\n            result: total,\r\n            finalResult: finalResult,\r\n            rolls: rolls\r\n        }))\r\n    }\r\n\r\n    changeMod(e) {\r\n        if (e.target.validity.valid) {\r\n            this.setState({ inputValue: e.target.value }); \r\n        }\r\n    }\r\n    \r\n    changeMultiple(e)  {\r\n        if (e.target.validity.valid) {\r\n            this.setState({ multiple: e.target.value }); \r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({ inputValue: \"0\" }); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <Container style={{\r\n                    left: '0px',\r\n                    position: 'left',\r\n                    display: 'contents'                \r\n                    }}>\r\n                    <Row>\r\n                        <Col sm={1} >\r\n                            <Button variant=\"success\" onClick={this.roll} size=\"lg\" className=\"btn btn-primary btn-lg btn-block\" block>Roll</Button> \r\n                        </Col>\r\n                        <Col sm={1} style={{padding: '0'}}>\r\n                            <input\r\n                            type=\"number\" value={this.state.multiple} \r\n                            onChange={this.changeMultiple} step=\"any\" \r\n                            style={{\r\n                                width: '100%', \r\n                                height: '85%',\r\n                                display: 'inline',\r\n                                fontSize: '20px'                                \r\n                                }}/>\r\n                        </Col>\r\n                        <Col sm={2} style={{padding: '0', 'text-align': 'left'}}>\r\n                            <h3 style={{padding: '0'}}>D{this.props.diceSize} +</h3>\r\n                        </Col>\r\n                        <Col sm={1} style={{padding: '0'}}>\r\n                            <input \r\n                            type=\"number\" \r\n                            value={this.state.inputValue} \r\n                            onChange={this.changeMod} \r\n                            step=\"any\" \r\n                            style={{\r\n                                width: '100%', \r\n                                height: '85%',\r\n                                display: 'inline',\r\n                                fontSize: '20px'\r\n                                }}/>\r\n                        </Col>\r\n                        <Col sm={4} >\r\n                            <h5>= ({this.state.rolls}) + {this.state.inputValue} =</h5> \r\n                        </Col>\r\n                        <Col sm={3} >\r\n                            <h3>{this.state.finalResult}</h3>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Dice from './Dice'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport uuid from \"uuid\";\r\n\r\nexport default class DicePage extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [\r\n        {diceSize: 20, id: uuid()}, \r\n        {diceSize: 12, id: uuid()},\r\n        {diceSize: 10, id: uuid()}, \r\n        {diceSize: 8, id: uuid()}, \r\n        {diceSize: 6, id: uuid()}, \r\n        {diceSize: 4, id: uuid()}, \r\n      ]\r\n    }\r\n    this.removeItem = this.removeItem.bind(this)\r\n    this.addItem = this.addItem.bind(this)\r\n  }\r\n\r\n  addItem(diceSize) {\r\n    this.setState({\r\n      items:[...this.state.items, {diceSize: diceSize, id: uuid()}]\r\n    });\r\n  }\r\n  \r\n  removeItem(e) {\r\n    const newItems = this.state.items.filter(item => item.id !== e)\r\n    this.setState({items: newItems})\r\n  }\r\n\r\n  render() {\r\n    let listItems = this.state.items.map((item) =>\r\n      <ListGroup.Item> \r\n      <Container style={{\r\n        left: '0px',\r\n        position: 'left',\r\n        display: 'contents'                \r\n        }}>\r\n        <Row>\r\n          <Col sm={11} style={{padding: '0'}}>\r\n            <Dice diceSize={item.diceSize}/>\r\n          </Col>\r\n          <Col sm={1} style={{padding: '0'}}>\r\n            <Button variant=\"danger\" onClick={() => this.removeItem(item.id)}>X</Button>  \r\n          </Col>\r\n        </Row>\r\n      </Container> \r\n      </ListGroup.Item>\r\n    );\r\n    console.log(listItems)\r\n       return (\r\n            <div style={{ width: '100%'}}>\r\n            <ButtonToolbar>\r\n              <div style={{width: '33%'}}></div>\r\n              <ButtonGroup>\r\n                <Button onClick={() => this.addItem(1000)}>D1000</Button>\r\n                <Button onClick={() => this.addItem(500)}>D500</Button>\r\n                <Button onClick={() => this.addItem(100)}>D100</Button>\r\n                <Button onClick={() => this.addItem(50)}>D50</Button>\r\n                <Button onClick={() => this.addItem(20)}>D20</Button>\r\n                <Button onClick={() => this.addItem(12)}>D12</Button>\r\n                <Button onClick={() => this.addItem(10)}>D10</Button>\r\n                <Button onClick={() => this.addItem(8)}>D8</Button>\r\n                <Button onClick={() => this.addItem(6)}>D6</Button>\r\n                <Button onClick={() => this.addItem(4)}>D4</Button>\r\n                <Button onClick={() => this.addItem(3)}>D3</Button>\r\n                <Button onClick={() => this.addItem(2)}>D2</Button>\r\n              </ButtonGroup>\r\n            </ButtonToolbar>\r\n            <Container fluid={true}>\r\n              <Row>\r\n                <Col>\r\n                  <ListGroup variant=\"flush\">\r\n                    {listItems}\r\n                  </ListGroup>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SplashScreen extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <h2>\r\n                    Welcome to Tabletop Helper!\r\n                </h2>\r\n                <p>\r\n                    To begin using the website, simply click on one of the tabs at the top.\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Table from 'react-bootstrap/Table'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\n\r\nexport default class DND5eStats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statArray: [0, 0, 0, 0, 0, 0],\r\n            rollsArray: [\"\", \"\", \"\", \"\", \"\", \"\"]\r\n        }\r\n        this.generate4D6DL = this.generate4D6DL.bind(this)\r\n        this.generate3D6 = this.generate3D6.bind(this)\r\n        this.generate2D6plus6 = this.generate2D6plus6.bind(this)\r\n        this.showStandardArray = this.showStandardArray.bind(this)\r\n    }\r\n\r\n    generate4D6DL() {\r\n            var results = [0, 0, 0, 0]\r\n            var statArray = []\r\n            var rollsArray = []\r\n            for(var i = 0; i < 6; i++) {\r\n                results = [0, 0, 0, 0]\r\n                for(var j = 0; j < 4; j++) {\r\n                    results[j] = Math.floor((Math.random() * 6) + 1)\r\n                }\r\n                results.sort()\r\n                statArray[i] = results[1] + results[2] + results[3]\r\n                rollsArray[i] = results[0] + \" | \" + results[1] + \" + \" + results[2] + \" + \" + results[3]\r\n            }\r\n            this.setState(state => ({\r\n                statArray: statArray,\r\n                rollsArray: rollsArray\r\n            }))\r\n    }\r\n\r\n    generate3D6() {\r\n        var results = [0, 0, 0]\r\n        var statArray = []\r\n        var rollsArray = []\r\n        for(var i = 0; i < 6; i++) {\r\n            results = [0, 0, 0]\r\n            for(var j = 0; j < 3; j++) {\r\n                results[j] = Math.floor((Math.random() * 6) + 1)\r\n            }\r\n            statArray[i] = results[0] + results[1] + results[2]\r\n            rollsArray[i] = results[0] + \" + \" + results[1] + \" + \" + results[2]\r\n        }\r\n        this.setState(state => ({\r\n            statArray: statArray,\r\n            rollsArray: rollsArray\r\n        }))\r\n    }\r\n\r\n    generate2D6plus6() {\r\n        var results = [0, 0]\r\n        var statArray = []\r\n        var rollsArray = []\r\n        for(var i = 0; i < 6; i++) {\r\n            results = [0, 0]\r\n            for(var j = 0; j < 2; j++) {\r\n                results[j] = Math.floor((Math.random() * 6) + 1)\r\n            }\r\n            statArray[i] = results[0] + results[1] + 6\r\n            rollsArray[i] = results[0] + \" + \" + results[1] + \" + 6\"\r\n        }\r\n        this.setState(state => ({\r\n            statArray: statArray,\r\n            rollsArray: rollsArray\r\n        }))\r\n    }\r\n\r\n    showStandardArray() {\r\n        this.setState({ \r\n            statArray: [15, 14, 13 , 12, 10, 8],\r\n            rollsArray: [\"\", \"\", \"\", \"\", \"\", \"\"]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                <div style={{width: '38%'}}></div>\r\n                    <ButtonGroup>\r\n                        <OverlayTrigger key='left ' placement='left' overlay={\r\n                            <Tooltip id={`tooltip-${'left'}`}>\r\n                                Most common way of rolling for stats\r\n                            </Tooltip>\r\n                        }>\r\n                            <Button variant=\"success\" onClick={this.generate4D6DL}>4D6 drop lowest</Button>\r\n                        </OverlayTrigger>\r\n                        <Button variant=\"secondary\" onClick={this.generate3D6}>3D6</Button>\r\n                        <Button variant=\"secondary\" onClick={this.generate2D6plus6}>2D6 + 6</Button>\r\n                    </ButtonGroup> \r\n                    <div style={{width: '1%'}}></div>\r\n                    <ButtonGroup>\r\n                        <OverlayTrigger key='right ' placement='right' overlay={\r\n                            <Tooltip id={`tooltip-${'right'}`}>\r\n                                Standard array can be found in page 13 of the PHB.\r\n                            </Tooltip>\r\n                        }>\r\n                            <Button variant=\"primary\" onClick={this.showStandardArray}>Standard Array</Button>\r\n                        </OverlayTrigger>\r\n                    </ButtonGroup>\r\n                </ButtonToolbar>\r\n                <Table bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>1</th>\r\n                            <th>2</th>\r\n                            <th>3</th>\r\n                            <th>4</th>\r\n                            <th>5</th>\r\n                            <th>6</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Rolls:</th>\r\n                            <th>{this.state.rollsArray[0]}</th>\r\n                            <th>{this.state.rollsArray[1]}</th>\r\n                            <th>{this.state.rollsArray[2]}</th>\r\n                            <th>{this.state.rollsArray[3]}</th>\r\n                            <th>{this.state.rollsArray[4]}</th>\r\n                            <th>{this.state.rollsArray[5]}</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Results:</th>\r\n                            <th>{this.state.statArray[0]}</th>\r\n                            <th>{this.state.statArray[1]}</th>\r\n                            <th>{this.state.statArray[2]}</th>\r\n                            <th>{this.state.statArray[3]}</th>\r\n                            <th>{this.state.statArray[4]}</th>\r\n                            <th>{this.state.statArray[5]}</th>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nexport default class CoCStats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statArray: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            rollsArray: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]\r\n        }\r\n        this.generateStandard = this.generateStandard.bind(this)\r\n        this.generate1D100 = this.generate1D100.bind(this)\r\n    }\r\n\r\n    generateStandard() {\r\n            var results = [0, 0, 0]\r\n            var statArray = []; \r\n            var rollsArray = [];\r\n            for(var i = 0; i < 6; i++) {\r\n                results = [0, 0, 0]\r\n                for(var j = 0; j < 3; j++) {\r\n                    results[j] = Math.floor((Math.random() * 6) + 1)\r\n                }\r\n                statArray[i] = (results[0] + results[1] + results[2]) * 5\r\n                rollsArray[i] = \"(\" + results[0] + \" + \" + results[1] + \" + \" + results[2] + \") * 5\"\r\n            }\r\n            for(i = 0; i < 3; i++) {\r\n                results = [0, 0]\r\n                for(j = 0; j < 2; j++) {\r\n                    results[j] = Math.floor((Math.random() * 6) + 1)\r\n                }\r\n                statArray[i + 6] = (results[0] + results[1] + 6) * 5\r\n                rollsArray[i + 6] = \"(\" + results[0] + \" + \" + results[1] + \" + (6)) * 5\"\r\n            }\r\n            this.setState(state => ({\r\n                statArray: statArray,\r\n                rollsArray: rollsArray\r\n            }))\r\n    }\r\n\r\n    generate1D100() {\r\n        var statArray = []; \r\n        var rollsArray = [];\r\n        for(var i = 0; i < 9; i++) {\r\n            statArray[i] = Math.floor((Math.random() * 100) + 1)\r\n            rollsArray[i] = this.state.statArray[i]\r\n        }\r\n        this.setState(state => ({\r\n            statArray: statArray,\r\n            rollsArray: rollsArray\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ButtonGroup>\r\n                    <Button variant=\"primary\" onClick={this.generateStandard}>Roll Standard</Button>\r\n                    <Button variant=\"secondary\" onClick={this.generate1D100}>1D100</Button>\r\n                </ButtonGroup> \r\n                <Table bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Stat:</th>\r\n                            <th>STR</th>\r\n                            <th>CON</th>\r\n                            <th>SIZ</th>\r\n                            <th>DEX</th>\r\n                            <th>APP</th>\r\n                            <th>POW</th>\r\n                            <th>INT</th>\r\n                            <th>EDU</th>\r\n                            <th>LUCK</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Rolls:</th>\r\n                            <th>{this.state.rollsArray[0]}</th>\r\n                            <th>{this.state.rollsArray[1]}</th>\r\n                            <th>{this.state.rollsArray[6]}</th>\r\n                            <th>{this.state.rollsArray[2]}</th>\r\n                            <th>{this.state.rollsArray[3]}</th>\r\n                            <th>{this.state.rollsArray[4]}</th>\r\n                            <th>{this.state.rollsArray[7]}</th>\r\n                            <th>{this.state.rollsArray[8]}</th>\r\n                            <th>{this.state.rollsArray[5]}</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Results:</th>\r\n                            <th>{this.state.statArray[0]}</th>\r\n                            <th>{this.state.statArray[1]}</th>\r\n                            <th>{this.state.statArray[6]}</th>\r\n                            <th>{this.state.statArray[2]}</th>\r\n                            <th>{this.state.statArray[3]}</th>\r\n                            <th>{this.state.statArray[4]}</th>\r\n                            <th>{this.state.statArray[7]}</th>\r\n                            <th>{this.state.statArray[8]}</th>\r\n                            <th>{this.state.statArray[5]}</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Results 1/2:</th>\r\n                            <th>{Math.floor(this.state.statArray[0] / 2)}</th>\r\n                            <th>{Math.floor(this.state.statArray[1] / 2)}</th>\r\n                            <th>{Math.floor(this.state.statArray[6] / 2)}</th>\r\n                            <th>{Math.floor(this.state.statArray[2] / 2)}</th>\r\n                            <th>{Math.floor(this.state.statArray[3] / 2)}</th>\r\n                            <th>{Math.floor(this.state.statArray[4] / 2)}</th>\r\n                            <th>{Math.floor(this.state.statArray[7] / 2)}</th>\r\n                            <th>{Math.floor(this.state.statArray[8] / 2)}</th>\r\n                            <th>{Math.floor(this.state.statArray[5] / 2)}</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Results 1/5:</th>\r\n                            <th>{Math.floor(this.state.statArray[0] / 5)}</th>\r\n                            <th>{Math.floor(this.state.statArray[1] / 5)}</th>\r\n                            <th>{Math.floor(this.state.statArray[6] / 5)}</th>\r\n                            <th>{Math.floor(this.state.statArray[2] / 5)}</th>\r\n                            <th>{Math.floor(this.state.statArray[3] / 5)}</th>\r\n                            <th>{Math.floor(this.state.statArray[4] / 5)}</th>\r\n                            <th>{Math.floor(this.state.statArray[7] / 5)}</th>\r\n                            <th>{Math.floor(this.state.statArray[8] / 5)}</th>\r\n                            <th>{Math.floor(this.state.statArray[5] / 5)}</th>\r\n                        </tr>\r\n                        \r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Curations extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p></p>\r\n                <p>This is where all curated content will go.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nexport default class CyberpunkCombat extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            body: \"\",\r\n            results: [],\r\n            rolls: []\r\n        }\r\n        this.roll = this.roll.bind(this);\r\n    }\r\n\r\n    roll() {\r\n        let\r\n        body = 0, \r\n        rolls = 0,\r\n        results = new Array(this.props.numBullets)\r\n\r\n        body = Math.floor(Math.random() * 10) + 1\r\n\r\n        for(var i = 0; i < this.props.numDice; i++) {\r\n            results[i] = Math.floor(Math.random() * this.props.diceSize) + 1\r\n            rolls += results[i]\r\n        }\r\n        rolls += this.props.damageBonus\r\n        console.log(rolls[i])\r\n        \r\n        for(i = 0; i < (this.props.numDice - 1); i++) {\r\n            results[i] = results[i] + \" + \"\r\n        }\r\n\r\n        switch(body) {\r\n            case 1: \r\n                body = \"head\";\r\n                break;\r\n            case 2:\r\n            case 3:\r\n            case 4: \r\n                body = \"torso\";\r\n                break;\r\n            case 5:\r\n                body = \"right arm\"\r\n                break;\r\n            case 6:\r\n                body = \"left arm\"\r\n                break;\r\n            case 7:\r\n            case 8: \r\n                body = \"right leg\";\r\n                break;\r\n            case 9:\r\n            case 10:\r\n                body = \"left leg\";\r\n                break;     \r\n            default:\r\n                body = \"\";\r\n\r\n        }\r\n\r\n        this.setState(state => ({\r\n            body: body,\r\n            results: results,\r\n            rolls: rolls\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container style={{\r\n                    left: '0px',\r\n                    position: 'left',\r\n                    display: 'contents'                \r\n                    }}>\r\n                    <Row>\r\n                        <Col sm={1} >\r\n                            <Button variant=\"primary\" onClick={this.roll} size=\"lg\" className=\"btn btn-primary btn-lg btn-block\" block>Roll</Button> \r\n                        </Col>\r\n                        <Col sm={2} style={{padding: '0', 'textAlign': 'left'}}>\r\n                            <h3 style={{padding: '0'}}>{this.props.numDice}D{this.props.diceSize} + {this.props.damageBonus}</h3>\r\n                        </Col>\r\n                        <Col sm={5} >\r\n                            <h5>= ({this.state.results}) + {this.props.damageBonus} =</h5> \r\n                        </Col>\r\n                        <Col sm={4} >\r\n                            <h3>{this.state.rolls} to {this.state.body}</h3>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport CyberpunkCombat from './CyberpunkCombat'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nexport default class CyberpunkWrapper extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showModal: false,\r\n            items: []\r\n        }\r\n        this.handleShow = this.handleShow.bind(this)\r\n        this.handleClose = this.handleClose.bind(this)\r\n    }\r\n\r\n\r\n\r\n    handleShow() { this.setState({ showModal: true })}\r\n\r\n    handleClose() {this.setState({ showModal: false })}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Button variant=\"primary\" onClick={this.handleShow}>\r\n                +\r\n            </Button>\r\n\r\n            <Modal show={this.state.showModal} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Add new dice configuration</Modal.Title>\r\n                </Modal.Header>\r\n                    <Modal.Body>\r\n                    <Form>\r\n                        <Form.Row>\r\n                            <Form.Group controlId=\"\">\r\n                                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                  </Form>\r\n                    </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={this.handleClose}>\r\n                        Save\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <CyberpunkCombat numDice={6} damageBonus={2} diceSize={6}/>\r\n            <CyberpunkCombat numDice={4} damageBonus={1} diceSize={6}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport About from './About'\r\nimport DicePage from './Dice/DicePage';\r\nimport SplashScreen from './SplashScreen';\r\nimport DND5eStats from './StatGenerator/DND5eStats';\r\nimport CoCStats from './StatGenerator/CoCStats';\r\nimport Curations from './Curations'\r\nimport CyberpunkWrapper from './Combat/CyberpunkWrapper'\r\n\r\nconst Main = () => (\r\n    <main style={{height: '100%'}} >\r\n        <Switch>\r\n            <Route exact path ='/' component={DicePage}/>\r\n            <Route exact path ='/dice' component={DicePage}/>\r\n            <Route exact path ='/about' component={About}/>\r\n            <Route exact path ='/generate/dnd' component={DND5eStats}/>\r\n            <Route exact path ='/generate/coc' component={CoCStats}/>\r\n            <Route exact path ='/curations' component={Curations}/>\r\n            <Route exact path ='/combat/cp' component={CyberpunkWrapper}/>\r\n        </Switch>\r\n    </main>\r\n)\r\n\r\nexport default Main;","import React from 'react';\r\nimport AppHeader from './components/AppHeader';\r\nimport './App.css';\r\nimport Main from './components/Main'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppHeader/>\r\n      <Main/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n </BrowserRouter>, \r\n document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}